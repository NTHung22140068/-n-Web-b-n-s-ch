import { toast } from 'react-toastify';

export interface CartItem {
    maSach: number;
    tenSach: string;
    giaBan: number;
    soLuong: number;
}

// T·∫°o custom event ƒë·ªÉ c·∫≠p nh·∫≠t gi·ªè h√†ng
export const CART_UPDATE_EVENT = 'cartUpdate';
export const dispatchCartUpdateEvent = () => {
    window.dispatchEvent(new Event(CART_UPDATE_EVENT));
};

export const addToCart = async (
    maSach: number,
    tenSach: string,
    giaBan: number,
    soLuong: number = 1
) => {
    // Ki·ªÉm tra ƒëƒÉng nh·∫≠p
    const userData = localStorage.getItem('userData');
    if (!userData) {
        toast.warning('üîí Vui l√≤ng ƒëƒÉng nh·∫≠p ƒë·ªÉ th√™m s·∫£n ph·∫©m v√†o gi·ªè h√†ng!');
        return false;
    }

    try {
        const user = JSON.parse(userData);
        const token = localStorage.getItem('token');
        
        const response = await fetch(`http://localhost:8081/gio-hang/them`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${token}`
            },
            body: JSON.stringify({
                tenDangNhap: user.tenDangNhap,
                maSach: maSach,
                soLuong: soLuong
            })
        });

        if (response.ok) {
            toast.success(`üõí ƒê√£ th√™m s√°ch "${tenSach}" v√†o gi·ªè h√†ng!`);
            dispatchCartUpdateEvent();
            return true;
        } else {
            const error = await response.text();
            toast.error(`‚ùå ${error}`);
            return false;
        }
    } catch (error) {
        console.error('L·ªói khi th√™m v√†o gi·ªè h√†ng:', error);
        toast.error('‚ùå C√≥ l·ªói x·∫£y ra khi th√™m s·∫£n ph·∫©m v√†o gi·ªè h√†ng!');
        return false;
    }
};

export const removeFromCart = async (maSach: number) => {
    const userData = localStorage.getItem('userData');
    if (!userData) return;

    try {
        const user = JSON.parse(userData);
        const token = localStorage.getItem('token');
        
        const response = await fetch(`http://localhost:8081/gio-hang/xoa-san-pham`, {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${token}`
            },
            body: JSON.stringify({
                tenDangNhap: user.tenDangNhap,
                maSach: maSach
            })
        });

        if (response.ok) {
            dispatchCartUpdateEvent();
            toast.info('üóëÔ∏è ƒê√£ x√≥a s·∫£n ph·∫©m kh·ªèi gi·ªè h√†ng!');
        } else {
            const error = await response.text();
            toast.error(`‚ùå ${error}`);
        }
    } catch (error) {
        console.error('L·ªói khi x√≥a s·∫£n ph·∫©m:', error);
        toast.error('‚ùå C√≥ l·ªói x·∫£y ra khi x√≥a s·∫£n ph·∫©m!');
    }
};

export const updateCartItemQuantity = async (maSach: number, newQuantity: number) => {
    const userData = localStorage.getItem('userData');
    if (!userData) return;

    try {
        const user = JSON.parse(userData);
        const token = localStorage.getItem('token');
        
        const response = await fetch(`http://localhost:8081/gio-hang/cap-nhat`, {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${token}`
            },
            body: JSON.stringify({
                tenDangNhap: user.tenDangNhap,
                maSach: maSach,
                soLuong: newQuantity
            })
        });

        if (response.ok) {
            dispatchCartUpdateEvent();
            toast.info('üìù ƒê√£ c·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng s·∫£n ph·∫©m!');
        } else {
            const error = await response.text();
            toast.error(`‚ùå ${error}`);
        }
    } catch (error) {
        console.error('L·ªói khi c·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng:', error);
        toast.error('‚ùå C√≥ l·ªói x·∫£y ra khi c·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng!');
    }
};

export const getCart = async (): Promise<CartItem[]> => {
    const userData = localStorage.getItem('userData');
    if (!userData) return [];

    try {
        const user = JSON.parse(userData);
        const token = localStorage.getItem('token');
        
        const response = await fetch(`http://localhost:8081/gio-hang/lay?tenDangNhap=${encodeURIComponent(user.tenDangNhap)}`, {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${token}`
            }
        });

        if (response.ok) {
            const cartItems = await response.json();
            return cartItems;
        } else {
            const error = await response.text();
            toast.error(`‚ùå ${error}`);
            return [];
        }
    } catch (error) {
        console.error('L·ªói khi l·∫•y gi·ªè h√†ng:', error);
        toast.error('‚ùå C√≥ l·ªói x·∫£y ra khi l·∫•y gi·ªè h√†ng!');
        return [];
    }
}; 