import { toast } from 'react-toastify';

export interface CartItem {
    maSach: number;
    tenSach: string;
    giaBan: number;
    soLuong: number;
    urlHinhAnh?: string;
}

// T·∫°o custom event ƒë·ªÉ c·∫≠p nh·∫≠t gi·ªè h√†ng
export const CART_UPDATE_EVENT = 'cartUpdate';
export const dispatchCartUpdateEvent = () => {
    window.dispatchEvent(new Event(CART_UPDATE_EVENT));
};

export const addToCart = (
    maSach: number,
    tenSach: string,
    giaBan: number,
    soLuong: number = 1,
    urlHinhAnh?: string
) => {
    // Ki·ªÉm tra ƒëƒÉng nh·∫≠p
    const userData = localStorage.getItem('userData');
    if (!userData) {
        toast.warning('üîí Vui l√≤ng ƒëƒÉng nh·∫≠p ƒë·ªÉ th√™m s·∫£n ph·∫©m v√†o gi·ªè h√†ng!');
        return false;
    }

    try {
        // L·∫•y gi·ªè h√†ng hi·ªán t·∫°i t·ª´ localStorage
        let cartItems: CartItem[] = [];
        const existingCart = localStorage.getItem('cartItems');
        if (existingCart) {
            cartItems = JSON.parse(existingCart);
        }

        // Ki·ªÉm tra xem s·∫£n ph·∫©m ƒë√£ c√≥ trong gi·ªè h√†ng ch∆∞a
        const existingItemIndex = cartItems.findIndex(item => item.maSach === maSach);

        if (existingItemIndex !== -1) {
            // N·∫øu s·∫£n ph·∫©m ƒë√£ t·ªìn t·∫°i, tƒÉng s·ªë l∆∞·ª£ng
            cartItems[existingItemIndex].soLuong += soLuong;
            toast.info(`üìö ƒê√£ c·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng s√°ch "${tenSach}" trong gi·ªè h√†ng!`);
        } else {
            // N·∫øu s·∫£n ph·∫©m ch∆∞a t·ªìn t·∫°i, th√™m m·ªõi
            cartItems.push({
                maSach,
                tenSach,
                giaBan,
                soLuong,
                urlHinhAnh
            });
            toast.success(`üõí ƒê√£ th√™m s√°ch "${tenSach}" v√†o gi·ªè h√†ng!`);
        }

        // L∆∞u gi·ªè h√†ng m·ªõi v√†o localStorage
        localStorage.setItem('cartItems', JSON.stringify(cartItems));

        // K√≠ch ho·∫°t custom event ƒë·ªÉ c·∫≠p nh·∫≠t UI
        dispatchCartUpdateEvent();

        return true;
    } catch (error) {
        console.error('L·ªói khi th√™m v√†o gi·ªè h√†ng:', error);
        toast.error('‚ùå C√≥ l·ªói x·∫£y ra khi th√™m s·∫£n ph·∫©m v√†o gi·ªè h√†ng!');
        return false;
    }
};

// H√†m x√≥a s·∫£n ph·∫©m kh·ªèi gi·ªè h√†ng
export const removeFromCart = (maSach: number) => {
    try {
        // L·∫•y gi·ªè h√†ng hi·ªán t·∫°i
        const existingCart = localStorage.getItem('cartItems');
        if (!existingCart) return;

        let cartItems: CartItem[] = JSON.parse(existingCart);
        
        // L·ªçc b·ªè s·∫£n ph·∫©m c·∫ßn x√≥a
        cartItems = cartItems.filter(item => item.maSach !== maSach);
        
        // C·∫≠p nh·∫≠t localStorage
        localStorage.setItem('cartItems', JSON.stringify(cartItems));
        
        // K√≠ch ho·∫°t custom event ƒë·ªÉ c·∫≠p nh·∫≠t UI
        dispatchCartUpdateEvent();
        
        toast.info('üóëÔ∏è ƒê√£ x√≥a s·∫£n ph·∫©m kh·ªèi gi·ªè h√†ng!');
    } catch (error) {
        console.error('L·ªói khi x√≥a s·∫£n ph·∫©m:', error);
        toast.error('‚ùå C√≥ l·ªói x·∫£y ra khi x√≥a s·∫£n ph·∫©m!');
    }
};

// H√†m c·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng s·∫£n ph·∫©m trong gi·ªè h√†ng
export const updateCartItemQuantity = (maSach: number, newQuantity: number) => {
    try {
        // L·∫•y gi·ªè h√†ng hi·ªán t·∫°i
        const existingCart = localStorage.getItem('cartItems');
        if (!existingCart) return;

        let cartItems: CartItem[] = JSON.parse(existingCart);
        
        // T√¨m v√† c·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng s·∫£n ph·∫©m
        const itemIndex = cartItems.findIndex(item => item.maSach === maSach);
        if (itemIndex !== -1) {
            cartItems[itemIndex].soLuong = newQuantity;
            
            // C·∫≠p nh·∫≠t localStorage
            localStorage.setItem('cartItems', JSON.stringify(cartItems));
            
            // K√≠ch ho·∫°t custom event ƒë·ªÉ c·∫≠p nh·∫≠t UI
            dispatchCartUpdateEvent();
            
            toast.info('üìù ƒê√£ c·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng s·∫£n ph·∫©m!');
        }
    } catch (error) {
        console.error('L·ªói khi c·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng:', error);
        toast.error('‚ùå C√≥ l·ªói x·∫£y ra khi c·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng!');
    }
}; 